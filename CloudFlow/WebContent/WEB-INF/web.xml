<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="CloudFlow" version="2.5">
  <display-name>CloudFlow</display-name>
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  <session-config>
    <session-timeout>60</session-timeout>
  </session-config>
  <context-param>
    <description>versiunea curenta a aplicatiei</description>
    <param-name>CloudDocVersion</param-name>
    <param-value>0.2</param-value>
  </context-param>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
			/WEB-INF/springConfig/cloudDoc-constants.xml
			/WEB-INF/springConfig/cloudDoc-content.xml
			/WEB-INF/springConfig/cloudDoc-context.xml
			/WEB-INF/springConfig/cloudDoc-integrityCheck.xml
			/WEB-INF/springConfig/cloudDoc-mail.xml
			/WEB-INF/springConfig/cloudDoc-misc.xml
			/WEB-INF/springConfig/cloudDoc-organization.xml
			/WEB-INF/springConfig/cloudDoc-parameters.xml
			/WEB-INF/springConfig/cloudDoc-process.xml
			/WEB-INF/springConfig/cloudDoc-scheduledTasks.xml
			/WEB-INF/springConfig/cloudDoc-security.xml
			/WEB-INF/springConfig/cloudDoc-webServices.xml
			/WEB-INF/springConfig/cloudDoc-rest.xml
			/WEB-INF/springConfig/cloudDoc-controller.xml
			/WEB-INF/springConfig/cloudDoc-parameters.xml
			/WEB-INF/springConfig/cloudDoc-exportDataAsSql.xml
        </param-value>
  </context-param>
  <listener>
    <listener-class>ro.cloudSoft.cloudDoc.web.listeners.Log4jWebLifecycleManagerListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  <listener>
  	<listener-class>ro.cloudSoft.cloudDoc.web.listeners.AppConfigurationListener</listener-class>
  </listener>
  <filter>
    <filter-name>RequestContextFilter</filter-name>
    <filter-class>org.springframework.web.filter.RequestContextFilter</filter-class>
  </filter>
  <filter>
    <filter-name>HibernateCustomOpenSessionInViewFilter</filter-name>
    <filter-class>ro.cloudSoft.cloudDoc.web.filters.HibernateCustomOpenSessionInViewFilter</filter-class>
  </filter>
  <filter>
	<filter-name>springSecurityFilterChain</filter-name>
	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
	<filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>  	
  <filter>
    <filter-name>LocaleResolverInNonSpringRequestFilter</filter-name>
    <filter-class>ro.cloudSoft.common.utils.spring.LocaleResolverInNonSpringRequestFilter</filter-class>
  </filter> 
  <filter-mapping>
    <filter-name>RequestContextFilter</filter-name>
    <servlet-name>SpringDispatcherServlet</servlet-name>
    <servlet-name>JerseySpringDispatcherServlet</servlet-name>
  </filter-mapping>
  <filter-mapping>
    <filter-name>HibernateCustomOpenSessionInViewFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>  
  <filter-mapping>
    <filter-name>LocaleResolverInNonSpringRequestFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>  
  <servlet>
    <servlet-name>ExceptionLoggingServlet</servlet-name>
    <servlet-class>ro.cloudSoft.cloudDoc.web.servlets.ExceptionLoggingServlet</servlet-class>
  </servlet>
  <servlet>
    <servlet-name>SpringDispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
      		/WEB-INF/springConfig/cloudDoc-servlet.xml
	  </param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet> 
	<servlet-name>JerseySpringDispatcherServlet</servlet-name>
	<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
	<init-param>
		<param-name>com.sun.jersey.config.property.packages</param-name>
		<param-value>ro.cloudSoft.cloudDoc.web.rest.config</param-value>
	</init-param>
	<init-param>
		<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
		<param-value>true</param-value>
	</init-param>
	<init-param>
		<param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
		<param-value>ro.cloudSoft.cloudDoc.web.filters.JerseyCORSFilter,ro.cloudSoft.cloudDoc.web.filters.AppVersionFilter</param-value>
	</init-param>	
	<init-param>
		<param-name>com.sun.jersey.config.feature.DisableWADL</param-name>
		<param-value>true</param-value>
	</init-param>
	<load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
	<servlet-name>JerseySpringDispatcherServlet</servlet-name>
	<url-pattern>/rest/*</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>ExceptionLoggingServlet</servlet-name>
    <url-pattern>/ExceptionLoggingServlet</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SpringDispatcherServlet</servlet-name>
    <url-pattern>*.do</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>SpringDispatcherServlet</servlet-name>
    <url-pattern>*.form</url-pattern>
  </servlet-mapping>
  <error-page>
    <exception-type>java.lang.Throwable</exception-type>
    <location>/ExceptionLoggingServlet</location>
  </error-page>
</web-app>