<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        	http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

	<changeSet id="0001-structura-jbpm" author="CloudSoft.User1">
		<sql endDelimiter=";">
			create table JBPM4_DEPLOYMENT (
		        DBID_ int8 not null,
		        NAME_ text,
		        TIMESTAMP_ int8,
		        STATE_ varchar(255),
		        primary key (DBID_)
		    );
		
		    create table JBPM4_DEPLOYPROP (
		        DBID_ int8 not null,
		        DEPLOYMENT_ int8,
		        OBJNAME_ varchar(255),
		        KEY_ varchar(255),
		        STRINGVAL_ varchar(255),
		        LONGVAL_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_EXECUTION (
		        DBID_ int8 not null,
		        CLASS_ varchar(255) not null,
		        DBVERSION_ int4 not null,
		        ACTIVITYNAME_ varchar(255),
		        PROCDEFID_ varchar(255),
		        HASVARS_ bool,
		        NAME_ varchar(255),
		        KEY_ varchar(255),
		        ID_ varchar(255) unique,
		        STATE_ varchar(255),
		        SUSPHISTSTATE_ varchar(255),
		        PRIORITY_ int4,
		        HISACTINST_ int8,
		        PARENT_ int8,
		        INSTANCE_ int8,
		        SUPEREXEC_ int8,
		        SUBPROCINST_ int8,
		        PARENT_IDX_ int4,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_HIST_ACTINST (
		        DBID_ int8 not null,
		        CLASS_ varchar(255) not null,
		        DBVERSION_ int4 not null,
		        HPROCI_ int8,
		        TYPE_ varchar(255),
		        EXECUTION_ varchar(255),
		        ACTIVITY_NAME_ varchar(255),
		        START_ timestamp,
		        END_ timestamp,
		        DURATION_ int8,
		        TRANSITION_ varchar(255),
		        NEXTIDX_ int4,
		        HTASK_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_HIST_DETAIL (
		        DBID_ int8 not null,
		        CLASS_ varchar(255) not null,
		        DBVERSION_ int4 not null,
		        USERID_ varchar(255),
		        TIME_ timestamp,
		        HPROCI_ int8,
		        HPROCIIDX_ int4,
		        HACTI_ int8,
		        HACTIIDX_ int4,
		        HTASK_ int8,
		        HTASKIDX_ int4,
		        HVAR_ int8,
		        HVARIDX_ int4,
		        MESSAGE_ text,
		        OLD_STR_ varchar(255),
		        NEW_STR_ varchar(255),
		        OLD_INT_ int4,
		        NEW_INT_ int4,
		        OLD_TIME_ timestamp,
		        NEW_TIME_ timestamp,
		        PARENT_ int8,
		        PARENT_IDX_ int4,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_HIST_PROCINST (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        ID_ varchar(255),
		        PROCDEFID_ varchar(255),
		        KEY_ varchar(255),
		        START_ timestamp,
		        END_ timestamp,
		        DURATION_ int8,
		        STATE_ varchar(255),
		        ENDACTIVITY_ varchar(255),
		        NEXTIDX_ int4,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_HIST_TASK (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        EXECUTION_ varchar(255),
		        OUTCOME_ varchar(255),
		        ASSIGNEE_ varchar(255),
		        PRIORITY_ int4,
		        STATE_ varchar(255),
		        CREATE_ timestamp,
		        END_ timestamp,
		        DURATION_ int8,
		        NEXTIDX_ int4,
		        SUPERTASK_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_HIST_VAR (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        PROCINSTID_ varchar(255),
		        EXECUTIONID_ varchar(255),
		        VARNAME_ varchar(255),
		        VALUE_ varchar(255),
		        HPROCI_ int8,
		        HTASK_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_ID_GROUP (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        ID_ varchar(255),
		        NAME_ varchar(255),
		        TYPE_ varchar(255),
		        PARENT_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_ID_MEMBERSHIP (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        USER_ int8,
		        GROUP_ int8,
		        NAME_ varchar(255),
		        primary key (DBID_)
		    );
		
		    create table JBPM4_ID_USER (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        ID_ varchar(255),
		        PASSWORD_ varchar(255),
		        GIVENNAME_ varchar(255),
		        FAMILYNAME_ varchar(255),
		        BUSINESSEMAIL_ varchar(255),
		        primary key (DBID_)
		    );
		
		    create table JBPM4_JOB (
		        DBID_ int8 not null,
		        CLASS_ varchar(255) not null,
		        DBVERSION_ int4 not null,
		        DUEDATE_ timestamp,
		        STATE_ varchar(255),
		        ISEXCLUSIVE_ bool,
		        LOCKOWNER_ varchar(255),
		        LOCKEXPTIME_ timestamp,
		        EXCEPTION_ text,
		        RETRIES_ int4,
		        PROCESSINSTANCE_ int8,
		        EXECUTION_ int8,
		        CFG_ int8,
		        SIGNAL_ varchar(255),
		        EVENT_ varchar(255),
		        REPEAT_ varchar(255),
		        primary key (DBID_)
		    );
		
		    create table JBPM4_LOB (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        BLOB_VALUE_ oid,
		        DEPLOYMENT_ int8,
		        NAME_ text,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_PARTICIPATION (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        GROUPID_ varchar(255),
		        USERID_ varchar(255),
		        TYPE_ varchar(255),
		        TASK_ int8,
		        SWIMLANE_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_PROPERTY (
		        KEY_ varchar(255) not null,
		        VERSION_ int4 not null,
		        VALUE_ varchar(255),
		        primary key (KEY_)
		    );
		
		    create table JBPM4_SWIMLANE (
		        DBID_ int8 not null,
		        DBVERSION_ int4 not null,
		        NAME_ varchar(255),
		        ASSIGNEE_ varchar(255),
		        EXECUTION_ int8,
		        primary key (DBID_)
		    );
		
		    create table JBPM4_TASK (
		        DBID_ int8 not null,
		        CLASS_ char(1) not null,
		        DBVERSION_ int4 not null,
		        NAME_ varchar(255),
		        DESCR_ text,
		        STATE_ varchar(255),
		        SUSPHISTSTATE_ varchar(255),
		        ASSIGNEE_ varchar(255),
		        FORM_ varchar(255),
		        PRIORITY_ int4,
		        CREATE_ timestamp,
		        DUEDATE_ timestamp,
		        PROGRESS_ int4,
		        SIGNALLING_ bool,
		        EXECUTION_ID_ varchar(255),
		        ACTIVITY_NAME_ varchar(255),
		        HASVARS_ bool,
		        SUPERTASK_ int8,
		        EXECUTION_ int8,
		        PROCINST_ int8,
		        SWIMLANE_ int8,
		        TASKDEFNAME_ varchar(255),
		        primary key (DBID_)
		    );
		
		    create table JBPM4_VARIABLE (
		        DBID_ int8 not null,
		        CLASS_ varchar(255) not null,
		        DBVERSION_ int4 not null,
		        KEY_ varchar(255),
		        CONVERTER_ varchar(255),
		        HIST_ bool,
		        EXECUTION_ int8,
		        TASK_ int8,
		        LOB_ int8,
		        DATE_VALUE_ timestamp,
		        DOUBLE_VALUE_ float8,
		        CLASSNAME_ varchar(255),
		        LONG_VALUE_ int8,
		        STRING_VALUE_ varchar(255),
		        TEXT_VALUE_ text,
		        EXESYS_ int8,
		        primary key (DBID_)
		    );
		
		    create index IDX_DEPLPROP_DEPL on JBPM4_DEPLOYPROP (DEPLOYMENT_);
		
		    alter table JBPM4_DEPLOYPROP 
		        add constraint FK_DEPLPROP_DEPL 
		        foreign key (DEPLOYMENT_) 
		        references JBPM4_DEPLOYMENT;
		
		    create index IDX_EXEC_SUPEREXEC on JBPM4_EXECUTION (SUPEREXEC_);
		
		    create index IDX_EXEC_INSTANCE on JBPM4_EXECUTION (INSTANCE_);
		
		    create index IDX_EXEC_SUBPI on JBPM4_EXECUTION (SUBPROCINST_);
		
		    create index IDX_EXEC_PARENT on JBPM4_EXECUTION (PARENT_);
		
		    alter table JBPM4_EXECUTION 
		        add constraint FK_EXEC_PARENT 
		        foreign key (PARENT_) 
		        references JBPM4_EXECUTION;
		
		    alter table JBPM4_EXECUTION 
		        add constraint FK_EXEC_SUBPI 
		        foreign key (SUBPROCINST_) 
		        references JBPM4_EXECUTION;
		
		    alter table JBPM4_EXECUTION 
		        add constraint FK_EXEC_INSTANCE 
		        foreign key (INSTANCE_) 
		        references JBPM4_EXECUTION;
		
		    alter table JBPM4_EXECUTION 
		        add constraint FK_EXEC_SUPEREXEC 
		        foreign key (SUPEREXEC_) 
		        references JBPM4_EXECUTION;
		
		    create index IDX_HACTI_HPROCI on JBPM4_HIST_ACTINST (HPROCI_);
		
		    create index IDX_HTI_HTASK on JBPM4_HIST_ACTINST (HTASK_);
		
		    alter table JBPM4_HIST_ACTINST 
		        add constraint FK_HACTI_HPROCI 
		        foreign key (HPROCI_) 
		        references JBPM4_HIST_PROCINST;
		
		    alter table JBPM4_HIST_ACTINST 
		        add constraint FK_HTI_HTASK 
		        foreign key (HTASK_) 
		        references JBPM4_HIST_TASK;
		
		    create index IDX_HDET_HACTI on JBPM4_HIST_DETAIL (HACTI_);
		
		    create index IDX_HDET_HPROCI on JBPM4_HIST_DETAIL (HPROCI_);
		
		    create index IDX_HDET_HVAR on JBPM4_HIST_DETAIL (HVAR_);
		
		    create index IDX_HDET_HTASK on JBPM4_HIST_DETAIL (HTASK_);
		
		    alter table JBPM4_HIST_DETAIL 
		        add constraint FK_HDETAIL_HPROCI 
		        foreign key (HPROCI_) 
		        references JBPM4_HIST_PROCINST;
		
		    alter table JBPM4_HIST_DETAIL 
		        add constraint FK_HDETAIL_HACTI 
		        foreign key (HACTI_) 
		        references JBPM4_HIST_ACTINST;
		
		    alter table JBPM4_HIST_DETAIL 
		        add constraint FK_HDETAIL_HTASK 
		        foreign key (HTASK_) 
		        references JBPM4_HIST_TASK;
		
		    alter table JBPM4_HIST_DETAIL 
		        add constraint FK_HDETAIL_HVAR 
		        foreign key (HVAR_) 
		        references JBPM4_HIST_VAR;
		
		    create index IDX_HSUPERT_SUB on JBPM4_HIST_TASK (SUPERTASK_);
		
		    alter table JBPM4_HIST_TASK 
		        add constraint FK_HSUPERT_SUB 
		        foreign key (SUPERTASK_) 
		        references JBPM4_HIST_TASK;
		
		    create index IDX_HVAR_HPROCI on JBPM4_HIST_VAR (HPROCI_);
		
		    create index IDX_HVAR_HTASK on JBPM4_HIST_VAR (HTASK_);
		
		    alter table JBPM4_HIST_VAR 
		        add constraint FK_HVAR_HPROCI 
		        foreign key (HPROCI_) 
		        references JBPM4_HIST_PROCINST;
		
		    alter table JBPM4_HIST_VAR 
		        add constraint FK_HVAR_HTASK 
		        foreign key (HTASK_) 
		        references JBPM4_HIST_TASK;
		
		    create index IDX_GROUP_PARENT on JBPM4_ID_GROUP (PARENT_);
		
		    alter table JBPM4_ID_GROUP 
		        add constraint FK_GROUP_PARENT 
		        foreign key (PARENT_) 
		        references JBPM4_ID_GROUP;
		
		    create index IDX_MEM_USER on JBPM4_ID_MEMBERSHIP (USER_);
		
		    create index IDX_MEM_GROUP on JBPM4_ID_MEMBERSHIP (GROUP_);
		
		    alter table JBPM4_ID_MEMBERSHIP 
		        add constraint FK_MEM_GROUP 
		        foreign key (GROUP_) 
		        references JBPM4_ID_GROUP;
		
		    alter table JBPM4_ID_MEMBERSHIP 
		        add constraint FK_MEM_USER 
		        foreign key (USER_) 
		        references JBPM4_ID_USER;
		
		    create index IDX_JOBRETRIES on JBPM4_JOB (RETRIES_);
		
		    create index IDX_JOB_CFG on JBPM4_JOB (CFG_);
		
		    create index IDX_JOB_PRINST on JBPM4_JOB (PROCESSINSTANCE_);
		
		    create index IDX_JOB_EXE on JBPM4_JOB (EXECUTION_);
		
		    create index IDX_JOBLOCKEXP on JBPM4_JOB (LOCKEXPTIME_);
		
		    create index IDX_JOBDUEDATE on JBPM4_JOB (DUEDATE_);
		
		    alter table JBPM4_JOB 
		        add constraint FK_JOB_CFG 
		        foreign key (CFG_) 
		        references JBPM4_LOB;
		
		    create index IDX_LOB_DEPLOYMENT on JBPM4_LOB (DEPLOYMENT_);
		
		    alter table JBPM4_LOB 
		        add constraint FK_LOB_DEPLOYMENT 
		        foreign key (DEPLOYMENT_) 
		        references JBPM4_DEPLOYMENT;
		
		    create index IDX_PART_TASK on JBPM4_PARTICIPATION (TASK_);
		
		    alter table JBPM4_PARTICIPATION 
		        add constraint FK_PART_SWIMLANE 
		        foreign key (SWIMLANE_) 
		        references JBPM4_SWIMLANE;
		
		    alter table JBPM4_PARTICIPATION 
		        add constraint FK_PART_TASK 
		        foreign key (TASK_) 
		        references JBPM4_TASK;
		
		    create index IDX_SWIMLANE_EXEC on JBPM4_SWIMLANE (EXECUTION_);
		
		    alter table JBPM4_SWIMLANE 
		        add constraint FK_SWIMLANE_EXEC 
		        foreign key (EXECUTION_) 
		        references JBPM4_EXECUTION;
		
		    create index IDX_TASK_SUPERTASK on JBPM4_TASK (SUPERTASK_);
		
		    alter table JBPM4_TASK 
		        add constraint FK_TASK_SWIML 
		        foreign key (SWIMLANE_) 
		        references JBPM4_SWIMLANE;
		
		    alter table JBPM4_TASK 
		        add constraint FK_TASK_SUPERTASK 
		        foreign key (SUPERTASK_) 
		        references JBPM4_TASK;
		
		    create index IDX_VAR_EXESYS on JBPM4_VARIABLE (EXESYS_);
		
		    create index IDX_VAR_TASK on JBPM4_VARIABLE (TASK_);
		
		    create index IDX_VAR_EXECUTION on JBPM4_VARIABLE (EXECUTION_);
		
		    create index IDX_VAR_LOB on JBPM4_VARIABLE (LOB_);
		
		    alter table JBPM4_VARIABLE 
		        add constraint FK_VAR_LOB 
		        foreign key (LOB_) 
		        references JBPM4_LOB;
		
		    alter table JBPM4_VARIABLE 
		        add constraint FK_VAR_EXECUTION 
		        foreign key (EXECUTION_) 
		        references JBPM4_EXECUTION;
		
		    alter table JBPM4_VARIABLE 
		        add constraint FK_VAR_EXESYS 
		        foreign key (EXESYS_) 
		        references JBPM4_EXECUTION;
		
		    alter table JBPM4_VARIABLE 
		        add constraint FK_VAR_TASK 
		        foreign key (TASK_) 
		        references JBPM4_TASK;
		</sql>
	</changeSet>
	
	<changeSet id="0001-creare-tabele" author="CloudSoft.User1">
		<sql endDelimiter=";">
			CREATE TABLE AUTONUMBERMETADATASEQVALUE (
			
				AUTONUMBERMETADATADEFINITIONID BIGINT NOT NULL,
				SEQUENCEVALUE BIGINT NOT NULL,
			
				CONSTRAINT AUTONUMBERMETADATASEQVALUE_PK PRIMARY KEY (AUTONUMBERMETADATADEFINITIONID)
			);
			
			CREATE TABLE DOCTYPE_OE (
			
				DOCUMENTTYPE_ID BIGINT NOT NULL,
				INITIATORS_ORG_ENTITY_ID BIGINT NOT NULL,
			
				CONSTRAINT DOCTYPE_OE_PK PRIMARY KEY (DOCUMENTTYPE_ID, INITIATORS_ORG_ENTITY_ID)
			);
			
			CREATE TABLE DOCUMENTTYPE (
			
				ID BIGINT NOT NULL,
				ALLUSERSINITIATORS BOOLEAN NOT NULL,
				DESCRIPTION TEXT,
				KEEPALLVERSIONS BOOLEAN NOT NULL,
				MANDATORYATTACHMENT BOOLEAN NOT NULL,
				NAME TEXT NOT NULL,
				MAND_ATTACH_WHEN_METAD_HAS_VAL BOOLEAN NOT NULL,
				META_NAME_IN_MAND_ATTACH_COND TEXT,
				META_VALUE_IN_MAND_ATTACH_COND TEXT,
				MANDATORY_ATTACHMENT_IN_STATES BOOLEAN NOT NULL,
				MANDATORY_ATTACHMENT_STATES TEXT,
				PAR_DOC_LOC_REAL_NAM_4_DEF_LOC TEXT,
				FOLDER_ID_4_DEFAULT_LOCATION TEXT,
				
				CONSTRAINT DOCUMENTTYPE_PK PRIMARY KEY (ID),
				CONSTRAINT DOCUMENT_TYPE_NAME_UNQ UNIQUE (NAME)
			);
			
			CREATE TABLE DOCUMENTTYPETEMPLATE (
			
				ID BIGINT NOT NULL,
				DATA BYTEA,
				DESCRIPTION TEXT,
				DOCUMENTTYPEID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				
				CONSTRAINT DOCUMENTTYPETEMPLATE_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE DOCUMENTTYPE_MIMETYPE (
			
				DOCUMENTTYPE_ID BIGINT NOT NULL,
				ALLOWEDMIMETYPES_ID BIGINT NOT NULL,
				
				CONSTRAINT DOCUMENTTYPE_MIMETYPE_PK PRIMARY KEY (DOCUMENTTYPE_ID, ALLOWEDMIMETYPES_ID)
			);
			
			CREATE TABLE EDOCGROUP (
			
				DESCRIPTION TEXT,
				NAME TEXT NOT NULL,
				ORG_ENTITY_ID BIGINT NOT NULL,
				
				CONSTRAINT EDOCGROUP_PK PRIMARY KEY (ORG_ENTITY_ID),
				CONSTRAINT GROUP_NAME_UNQ UNIQUE (NAME)
			);
			
			CREATE TABLE EDOCUSER (
			
				EMAIL TEXT,
				EMPLOYEENUMBER TEXT,
				FIRSTNAME TEXT,
				LASTNAME TEXT,
				PASSWORD TEXT,
				TITLE TEXT NOT NULL,
				USERNAME TEXT NOT NULL,
				ORG_ENTITY_ID BIGINT NOT NULL,
				ORGANIZATION_ID BIGINT,
				OU_ORG_ENTITY_ID BIGINT,
				custom_title_template TEXT,
				PHONE TEXT,
				FAX TEXT,
				MOBILE TEXT,
				
				CONSTRAINT EDOCUSER_PK PRIMARY KEY (ORG_ENTITY_ID),
				CONSTRAINT UNIQUE_USER_UQ UNIQUE (USERNAME, TITLE)
			);
			
			CREATE TABLE GROUP_USER (
			
				GROUP_ID BIGINT NOT NULL,
				USER_ID BIGINT NOT NULL,
				
				CONSTRAINT GROUP_USER_PK PRIMARY KEY (GROUP_ID, USER_ID)
			);
						
			CREATE TABLE log_entries (
				
				id BIGINT NOT NULL,
				log_time TIMESTAMP NOT NULL,
				log_level TEXT NOT NULL,
				module TEXT NOT NULL,
				operation TEXT,
				actor_type TEXT NOT NULL,
				actor_display_name TEXT NOT NULL,
				user_id BIGINT,
				message TEXT NOT NULL,
				exception TEXT,
				
				CONSTRAINT log_entries_pk PRIMARY KEY (id)
			);
			
			CREATE TABLE LISTMETADATAITEM (
			
				ID BIGINT NOT NULL,
				LABEL TEXT NOT NULL,
				VALUE TEXT NOT NULL,
				LIST_ID BIGINT NOT NULL,
				ORDER_NUMBER INTEGER NOT NULL,
				
				CONSTRAINT LISTMETADATAITEM_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE METADATACOLLECTION (
			
				ID BIGINT NOT NULL,
				LABEL TEXT,
				NAME TEXT,
				DOCUMENTTYPE_ID BIGINT,
				RESTRICTED_ON_EDIT BOOLEAN NOT NULL,
				RESTRICTED_ON_EDIT_STEPS TEXT,
				MANDATORY BOOLEAN NOT NULL,
				MANDATORY_STEPS TEXT,
				ORDERNUMBER INTEGER NOT NULL,
				INVISIBLE BOOLEAN NOT NULL,
				INVISIBLE_IN_STATES TEXT,
				JR_PROPERTY_NAME TEXT,
				md_name_for_auto_cmpl_wth_md TEXT,
				type_of_auto_cmpl_wth_md TEXT,
				nom_atr_ky_for_aut_cmpl_wth_md TEXT,
				class_name_for_aut_cmpl_wth_md TEXT,
				
				CONSTRAINT METADATACOLLECTION_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE METADATADEFINITION (
			
				BASEMETADATATYPE TEXT NOT NULL,
				ID BIGINT NOT NULL,
				DEFAULT_VALUE TEXT,
				INDEXED BOOLEAN NOT NULL,
				LABEL TEXT,
				MANDATORY BOOLEAN NOT NULL,
				MANDATORYSTATES TEXT,
				METADATATYPE TEXT,
				NAME TEXT,
				ORDERNUMBER INTEGER NOT NULL,
				REPRESENTATIVE BOOLEAN NOT NULL,
				RESTRICTEDONEDIT BOOLEAN NOT NULL,
				RESTRICTEDONEDITSTATES TEXT,
				NUMBERLENGTH INTEGER,
				PREFIX TEXT,
				EXTENDABLE BOOLEAN,
				MULTIPLESELECTION BOOLEAN,
				COLLECTION_ID BIGINT,
				DOCUMENTTYPE_ID BIGINT,
				ONLY_USERS_FROM_GROUP BOOLEAN,
				ID_OF_GROUP_OF_PERMITTED_USERS BIGINT,				
				AUTO_COMPL_WITH_CURRENT_USER BOOLEAN,
				AUTO_CPL_W_CRT_USR_STATE_CODE TEXT,
				NOMENCLATOR_ID BIGINT,
				AUTO_COMPL_WITH_CURRENT_DATE BOOLEAN,
				INVISIBLE BOOLEAN NOT NULL,
				INVISIBLE_IN_STATES TEXT,
				AUTO_COMPL_WITH_CURRENT_MONTH BOOLEAN,
				MD_NAME_FOR_AUTO_CMPL_WTH_MD TEXT,
				TYPE_OF_AUTO_CMPL_WTH_MD TEXT,
				NOM_ATR_KY_FOR_AUT_CMPL_WTH_MD TEXT,
				class_name_for_aut_cmpl_wth_md TEXT,
				AUTO_COMPL_WITH_CRNT_DATE_TIME BOOLEAN,
				JR_PROPERTY_NAME TEXT,
				METADATA_DOCUMENT_TYPE_ID BIGINT,
				MULTIPLE_DOCUMENTS_SELECTION BOOLEAN,
				MULTIPLE_PROJECTS_SELECTION BOOLEAN,
				
				CONSTRAINT METADATADEFINITION_PK PRIMARY KEY (ID),
				CONSTRAINT ID_OF_GROUP_OF_PERM_USERS_FK FOREIGN KEY (ID_OF_GROUP_OF_PERMITTED_USERS) REFERENCES EDOCGROUP (ORG_ENTITY_ID)
			);
			
			CREATE TABLE MIMETYPE (
				
				ID BIGINT NOT NULL,
				EXTENSION TEXT,
				NAME TEXT,
				
				CONSTRAINT MIMETYPE_PK PRIMARY KEY (ID),
				CONSTRAINT MIME_TYPE_EXTENSION_UNQ UNIQUE (EXTENSION)
			);
			
			CREATE TABLE ORGANIZATION (
			
				ID BIGINT NOT NULL,
				NAME TEXT,
				MANAGER_ID BIGINT,
				
				CONSTRAINT ORGANIZATION_PK PRIMARY KEY (ID),
				CONSTRAINT ORGANIZATION_NAME_UNQ UNIQUE (NAME)
			);
			
			CREATE TABLE ORGANIZATIONENTITY (
			
				ORG_ENTITY_ID BIGINT NOT NULL,
				
				CONSTRAINT ORGANIZATIONENTITY_PK PRIMARY KEY (ORG_ENTITY_ID)
			);
			
			CREATE TABLE ORGANIZATIONUNIT (
			
				DESCRIPTION TEXT,
				NAME TEXT,
				ORG_ENTITY_ID BIGINT NOT NULL,
				MANAGER_ORG_ENTITY_ID BIGINT,
				ORGANIZATION_ID BIGINT,
				PARENTOU_ORG_ENTITY_ID BIGINT,
				
				CONSTRAINT ORGANIZATIONUNIT_PK PRIMARY KEY (ORG_ENTITY_ID),
				CONSTRAINT ORGANIZATION_UNIT_NAME_UNQ UNIQUE (NAME, PARENTOU_ORG_ENTITY_ID)
			);
			
			CREATE TABLE WORKFLOW (
			
				ID BIGINT NOT NULL,
				DESCRIPTION TEXT,
				NAME TEXT NOT NULL,
				PROCESSDEFINITIONID TEXT,
				VERSION_NUMBER INTEGER NOT NULL,
				BASE_VERSION_ID BIGINT,
				SOURCE_VERSION_ID BIGINT,
				
				CONSTRAINT WORKFLOW_PK PRIMARY KEY (ID),
				CONSTRAINT UNIQUE_WORKFLOW_UQ UNIQUE (name, version_number),
				CONSTRAINT base_version_workflow_fk FOREIGN KEY (base_version_id) REFERENCES workflow (id),
				CONSTRAINT source_version_workflow_fk FOREIGN KEY (source_version_id) REFERENCES workflow (id)
			);
			
			CREATE TABLE WORKFLOWINSTANCE (
			
				ID BIGINT NOT NULL,
				DOCUMENTID TEXT,
				INITIATORID BIGINT,
				PROCESSINSTANCEID TEXT,
				STATUS TEXT,
				WORKSPACENAME TEXT,
				WORKFLOW_ID BIGINT,
				
				CONSTRAINT WORKFLOWINSTANCE_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE WORKFLOWSTATE (
			
				ID BIGINT NOT NULL,
				ATTACHMENTSPERMISSION INTEGER,
				CODE TEXT,
				NAME TEXT,
				STATETYPE INTEGER,
				AUTOMATICRUNNING BOOLEAN,
				CLASSPATH TEXT,
				
				CONSTRAINT WORKFLOWSTATE_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE WORKFLOWTRANSITION (
			
				ID BIGINT NOT NULL,
				AVAILABLE_4_AUTO_ACTIONS_ONLY BOOLEAN NOT NULL,
				DEADLINEACTION BOOLEAN,
				DEADLINEACTIONTYPE INTEGER,
				DEADLINENOTIFYRESENDINTERVAL INTEGER,
				DEADLINEPERIOD INTEGER,
				NAME TEXT,
				ROUTINGCONDITION TEXT,
				ROUTINGDESTINATIONID BIGINT,
				ROUTINGDESTINATIONPARAMETER TEXT,
				ROUTINGTYPE TEXT,
				FINALSTATE_ID BIGINT,
				STARTSTATE_ID BIGINT,
				WORKFLOW_ID BIGINT,
				
				CONSTRAINT WORKFLOWTRANSITION_PK PRIMARY KEY (ID),
				CONSTRAINT TRANSITION_NAME_UNQ UNIQUE (NAME, WORKFLOW_ID)
			);
			
			CREATE TABLE WORKFLOWVIEWER_OE (
				
				WORKFLOWTRANSITION_ID BIGINT NOT NULL,
				EXTRAVIEWERS_ORG_ENTITY_ID BIGINT NOT NULL,
				
				CONSTRAINT WORKFLOWVIEWER_OE_PK PRIMARY KEY (WORKFLOWTRANSITION_ID, EXTRAVIEWERS_ORG_ENTITY_ID)
			);
			
			CREATE TABLE WORKFLOW_OE (
				
				WORKFLOW_ID BIGINT NOT NULL,
				SUPERVISORS_ORG_ENTITY_ID BIGINT NOT NULL,
				
				CONSTRAINT WORKFLOW_OE_PK PRIMARY KEY (WORKFLOW_ID, SUPERVISORS_ORG_ENTITY_ID)
			);
			
			CREATE TABLE replacement_profiles (
			
				id BIGINT NOT NULL,
				requester_username TEXT NOT NULL,
				replacement_user_id BIGINT NOT NULL,
				comments TEXT,
				start_date DATE NOT NULL,
				end_date DATE NOT NULL,
				out_of_office BIGINT NOT NULL,
				out_of_office_email_subj_tpl TEXT,
				out_of_office_email_body_tpl TEXT,
			  
				CONSTRAINT replacement_profiles_pk PRIMARY KEY (id),
				CONSTRAINT repl_prof_repl_user_fk FOREIGN KEY (replacement_user_id) REFERENCES edocuser (org_entity_id)
			);
			
			CREATE TABLE sel_user_prof_4_repl_profiles (
			
				repl_profile_id BIGINT NOT NULL,
				user_profile_id BIGINT NOT NULL,
			  
				CONSTRAINT sel_user_prof_4_repl_prof_pk PRIMARY KEY (repl_profile_id, user_profile_id),
				CONSTRAINT sel_user_prof_repl_prof_fk FOREIGN KEY (repl_profile_id) REFERENCES replacement_profiles (id),
				CONSTRAINT sel_user_prof_user_prof_fk FOREIGN KEY (user_profile_id) REFERENCES edocuser (org_entity_id)
			);
			
			CREATE TABLE replacement_profile_statuses (
			
				id BIGINT NOT NULL,
				profile_id BIGINT NOT NULL,
				status TEXT NOT NULL,
			  
				CONSTRAINT repl_profile_statuses_pk PRIMARY KEY (id),
				CONSTRAINT repl_profile_4_status_fk FOREIGN KEY (profile_id) REFERENCES replacement_profiles (id),
				CONSTRAINT unique_repl_profile_4_status UNIQUE (profile_id)
			);
			
			CREATE TABLE replacement_profile_instances (
			
				document_location_real_name TEXT NOT NULL,
				document_id TEXT NOT NULL,
			  
				CONSTRAINT replacement_profile_inst_pk PRIMARY KEY (document_location_real_name, document_id)
			);
			
			CREATE TABLE replacement_profile_inst_items (
						
				document_location_real_name TEXT NOT NULL,
				document_id TEXT NOT NULL,
				item_index INTEGER NOT NULL,
				originally_assigned_entity_id BIGINT NOT NULL,
				replacement_used_user_id BIGINT NOT NULL,
				replacement_profile_used_id BIGINT NOT NULL,
			  
				CONSTRAINT repl_profile_inst_items_pk PRIMARY KEY (document_location_real_name, document_id, item_index),
				CONSTRAINT repl_profile_inst_4_item_fk FOREIGN KEY (document_location_real_name, document_id) REFERENCES replacement_profile_instances (document_location_real_name, document_id),
				CONSTRAINT orig_assigned_entity_id_fk FOREIGN KEY (originally_assigned_entity_id) REFERENCES organizationentity (org_entity_id),
				CONSTRAINT replacement_used_user_fk FOREIGN KEY (replacement_used_user_id) REFERENCES edocuser (org_entity_id),
				CONSTRAINT replacement_profile_used_fk FOREIGN KEY (replacement_profile_used_id) REFERENCES replacement_profiles (id)
			);
			
			CREATE TABLE sel_repl_prof_req_is_repl (
			  
				repl_profile_id_4_requester BIGINT NOT NULL,
				repl_profile_id_4_replacement BIGINT NOT NULL,
			  
				CONSTRAINT sel_act_repl_pr_req_is_repl_pk PRIMARY KEY (repl_profile_id_4_requester, repl_profile_id_4_replacement),
				CONSTRAINT repl_profile_id_4_requestr_fk FOREIGN KEY (repl_profile_id_4_requester) REFERENCES replacement_profiles (id),
				CONSTRAINT repl_profile_id_4_replcmnt_fk FOREIGN KEY (repl_profile_id_4_replacement) REFERENCES replacement_profiles (id)
			);
			
			CREATE TABLE workflow_doc_type (
			  
			  workflow_id BIGINT NOT NULL,
			  document_type_id BIGINT NOT NULL,
			  
			  CONSTRAINT workflow_doc_type_pk PRIMARY KEY (workflow_id, document_type_id),
			  CONSTRAINT workflow_4_doc_type_fk FOREIGN KEY (workflow_id) REFERENCES workflow (id),
			  CONSTRAINT doc_type_4_workflow_fk FOREIGN KEY (document_type_id) REFERENCES documenttype (id)
			);
			
			CREATE TABLE transition_notifications (
				
				id BIGINT NOT NULL,
				transition_id BIGINT NOT NULL,
				email_subject_template TEXT NOT NULL,
				email_content_template TEXT NOT NULL,
				
				CONSTRAINT transition_notifications_pk PRIMARY KEY (id),
				CONSTRAINT transition_4_notif_fk FOREIGN KEY (transition_id) REFERENCES workflowtransition (id)
			);
			
			CREATE TABLE assigned_trans_notifs (
			
				notification_id BIGINT NOT NULL,
				
				CONSTRAINT assigned_trans_notifs_pk PRIMARY KEY (notification_id),
				CONSTRAINT assigned_trans_notif_fk FOREIGN KEY (notification_id) REFERENCES transition_notifications (id)
			);
			
			CREATE TABLE initiator_trans_notifs (
			
				notification_id BIGINT NOT NULL,
			
				CONSTRAINT initiator_trans_notifs_pk PRIMARY KEY (notification_id),
				CONSTRAINT initiator_trans_notifs_fk FOREIGN KEY (notification_id) REFERENCES transition_notifications (id)
			);
			
			CREATE TABLE manual_trans_notifs (
			
				notification_id BIGINT NOT NULL,
			
				CONSTRAINT manual_trans_notifs_pk PRIMARY KEY (notification_id),
				CONSTRAINT manual_trans_notifs_fk FOREIGN KEY (notification_id) REFERENCES transition_notifications (id)
			);
			
			CREATE TABLE entits_4_manual_trans_notifs (
			
				man_trans_notif_id BIGINT NOT NULL,
				org_entity_id BIGINT NOT NULL,
				
				CONSTRAINT ent_4_manual_trans_notifs_pk PRIMARY KEY (man_trans_notif_id, org_entity_id),
				CONSTRAINT man_trans_notif_2_notif_fk FOREIGN KEY (man_trans_notif_id) REFERENCES manual_trans_notifs (notification_id),
				CONSTRAINT man_trans_notif_2_entity_fk FOREIGN KEY (org_entity_id) REFERENCES organizationentity (org_entity_id)
			);
			
			CREATE TABLE user_meta_trans_notifs (
			
				notification_id BIGINT NOT NULL,
				metadata_name TEXT NOT NULL,
			
				CONSTRAINT user_meta_trans_notifs_pk PRIMARY KEY (notification_id),
				CONSTRAINT user_meta_trans_notifs_fk FOREIGN KEY (notification_id) REFERENCES transition_notifications (id)
			);
			
			CREATE TABLE user_deactivation (
			
				id BIGINT NOT NULL,
				user_id BIGINT NOT NULL,
				user_old_title TEXT NOT NULL,
				
				parent_organization_id BIGINT,
				parent_organization_unit_id BIGINT,
				
				CONSTRAINT user_deactivation_pk PRIMARY KEY (id),
				CONSTRAINT user_deactivation_user_fk FOREIGN KEY (user_id) REFERENCES edocuser (org_entity_id),
				CONSTRAINT user_deactivation_user_unq UNIQUE (user_id),
				CONSTRAINT parent_4_deact_user_chk CHECK ((parent_organization_id IS NOT NULL) OR (parent_organization_unit_id IS NOT NULL)),
				CONSTRAINT p_org_id_4_deact_user_fk FOREIGN KEY (parent_organization_id) REFERENCES organization (id),
				CONSTRAINT p_org_unit_id_4_deact_user_fk FOREIGN KEY (parent_organization_unit_id) REFERENCES organizationunit (org_entity_id)
			);
			
			CREATE TABLE groups_4_user_deactivation (
			
				user_deactivation_id BIGINT NOT NULL,
				group_id BIGINT NOT NULL,
				
				CONSTRAINT groups_4_user_deactivation_pk PRIMARY KEY (user_deactivation_id, group_id),
				CONSTRAINT deact_4_groups_link_fk FOREIGN KEY (user_deactivation_id) REFERENCES user_deactivation (id),
				CONSTRAINT group_4_user_deact_fk FOREIGN KEY (group_id) REFERENCES edocgroup (org_entity_id)
			);
			
			CREATE TABLE sup_of_initiator_trans_notifs (
			
				notification_id BIGINT NOT NULL,
			
				CONSTRAINT sup_of_init_trans_notifs_pk PRIMARY KEY (notification_id),
				CONSTRAINT sup_of_init_trans_notifs_fk FOREIGN KEY (notification_id) REFERENCES transition_notifications (id)
			);
			
			CREATE TABLE audit_entries (
			
				id BIGINT NOT NULL,
				
				date_time TIMESTAMP NOT NULL,
				
				user_id BIGINT NOT NULL,
				user_display_name TEXT NOT NULL,
				
				entity_type TEXT NOT NULL,
				
				entity_identifier TEXT NOT NULL,
				entity_display_name TEXT NOT NULL,
				
				operation TEXT NOT NULL,
				
				CONSTRAINT audit_entries_pk PRIMARY KEY (id),
				CONSTRAINT audit_entries_user_fk FOREIGN KEY (user_id) REFERENCES edocuser (org_entity_id)
			);
			
			CREATE TABLE NOMENCLATOR (
				ID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				CODE TEXT,
				
				CONSTRAINT NOMENCLATOR_PK PRIMARY KEY (ID),
				CONSTRAINT NOMENCLATOR_NAME_UQ UNIQUE (NAME),
				CONSTRAINT NOMENCLATOR_CODE_UQ UNIQUE (CODE)
			);
			
			CREATE TABLE NOMENCLATOR_ATTRIBUTE (
				ID BIGINT NOT NULL,
				NOMENCLATOR_ID BIGINT NOT NULL, 
				NAME TEXT NOT NULL,
				KEY TEXT NOT NULL,
				COLUMN_NAME TEXT NOT NULL,
				UI_ORDER INTEGER NOT NULL,
				TYPE TEXT NOT NULL,
				TYPE_NOMENCLATOR_ID BIGINT,
				REQUIRED BOOLEAN NOT NULL,
				
				CONSTRAINT NOMENCLATOR_ATTRIBUTE_PK PRIMARY KEY (ID)
			);

			CREATE TABLE NOMENCLATOR_VALUES (
				ID BIGINT NOT NULL,
				NOMENCLATOR_ID BIGINT NOT NULL,
				ATTRIBUTE1 TEXT,
				ATTRIBUTE2 TEXT,
				ATTRIBUTE3 TEXT,
				ATTRIBUTE4 TEXT,
				ATTRIBUTE5 TEXT,
				ATTRIBUTE6 TEXT,
				ATTRIBUTE7 TEXT,
				ATTRIBUTE8 TEXT,
				ATTRIBUTE9 TEXT,
				ATTRIBUTE10 TEXT,
				ATTRIBUTE11 TEXT,
				ATTRIBUTE12 TEXT,
				ATTRIBUTE13 TEXT,
				ATTRIBUTE14 TEXT,
				ATTRIBUTE15 TEXT,
				ATTRIBUTE16 TEXT,
				ATTRIBUTE17 TEXT,
				ATTRIBUTE18 TEXT,
				ATTRIBUTE19 TEXT,
				ATTRIBUTE20 TEXT,
				ATTRIBUTE21 TEXT,
				ATTRIBUTE22 TEXT,
				ATTRIBUTE23 TEXT,
				ATTRIBUTE24 TEXT,
				ATTRIBUTE25 TEXT,
				ATTRIBUTE26 TEXT,
				ATTRIBUTE27 TEXT,
				ATTRIBUTE28 TEXT,
				ATTRIBUTE29 TEXT,
				ATTRIBUTE30 TEXT,
				ATTRIBUTE31 TEXT,
				ATTRIBUTE32 TEXT,
				ATTRIBUTE33 TEXT,
				ATTRIBUTE34 TEXT,
				ATTRIBUTE35 TEXT,
				ATTRIBUTE36 TEXT,
				ATTRIBUTE37 TEXT,
				ATTRIBUTE38 TEXT,
				ATTRIBUTE39 TEXT,
				ATTRIBUTE40 TEXT,
				ATTRIBUTE41 TEXT,
				ATTRIBUTE42 TEXT,
				ATTRIBUTE43 TEXT,
				ATTRIBUTE44 TEXT,
				ATTRIBUTE45 TEXT,
				ATTRIBUTE46 TEXT,
				ATTRIBUTE47 TEXT,
				ATTRIBUTE48 TEXT,
				ATTRIBUTE49 TEXT,
				ATTRIBUTE50 TEXT,
				DELETED BOOLEAN NOT NULL,
				
				CONSTRAINT NOMENCLATOR_VALUES_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE NOMENCLATOR_UI_ATTRIBUTE (
				ID BIGINT NOT NULL,
				NOMENCLATOR_ID BIGINT NOT NULL,
				ATTRIBUTE_ID BIGINT NOT NULL,
				UI_ORDER INTEGER NOT NULL,
			  
				CONSTRAINT NOMENCLATOR_UI_ATTRIBUTE_PK PRIMARY KEY ( ID )
			);
			
			CREATE TABLE DOCUMENT_VALIDATION_DEFINITION (
				ID BIGINT NOT NULL,
				DOCUMENT_TYPE_ID BIGINT,
				METADATA_COLLECTION_ID BIGINT,
				CONDITION_EXPRESSION TEXT NOT NULL,
				VALIDATION_IN_STATES TEXT,
				MESSAGE TEXT NOT NULL,
				VALIDATION_ORDER INTEGER NOT NULL,
				
				CONSTRAINT PK_DOC_VALIDATION_DEFINITION PRIMARY KEY (ID)
			);
			
			CREATE TABLE SUP_OF_USER_MTADTA_TRANS_NOTIF (
			
				NOTIFICATION_ID BIGINT NOT NULL,
				METADATA_NAME TEXT NOT NULL,
				
				CONSTRAINT SUP_OF_USER_MTADTA_PK PRIMARY KEY (NOTIFICATION_ID)
			);
			
			CREATE TABLE PARAMETERS (
				ID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				DESCRIPTION TEXT NOT NULL,
				VALUE TEXT NOT NULL,
				TYPE TEXT NOT NULL,
				
				CONSTRAINT PARAMETERS_PK PRIMARY KEY(ID)
			);
			
			CREATE TABLE CALENDAR (
				ID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				DESCRIPTION TEXT,
				COLOR TEXT,
				PERMIT_ALL BOOLEAN,
				
				CONSTRAINT CALENDAR_PK PRIMARY KEY (ID),
				CONSTRAINT CALENDAR_NAME_UK UNIQUE ( NAME )
			);
			
			CREATE TABLE CALENDAR_EVENT (
				ID BIGINT NOT NULL,
				SUBJECT TEXT NOT NULL,
				DESCRIPTION TEXT,
				START_DATE TIMESTAMP(6) WITH TIME ZONE,
				END_DATE TIMESTAMP(6) WITH TIME ZONE,
				ALL_DAY BOOLEAN,
				LOCATION TEXT,
				REPEAT TEXT,
				REMINDER_MINUTES INTEGER,
				TYPE TEXT,
				CALENDAR_ID BIGINT NOT NULL,
				BIRTHDATE TIMESTAMP,
				jr_document_location_real_name TEXT,
				jr_document_id TEXT,
				reprezentant_extern_nom_value_id BIGINT,
				
				CONSTRAINT CALENDAR_EVENT_PK PRIMARY KEY ( ID )
			);
			
			CREATE TABLE CALENDAR_USER_RIGHTS (
				ID BIGINT NOT NULL,
				CALENDAR_ID BIGINT NOT NULL,
				USER_RIGHT_ORG_ENTITY_ID BIGINT NOT NULL,
				VIEW_RIGHT BOOLEAN,
				ADD_RIGHT BOOLEAN,
				EDIT_RIGHT BOOLEAN,
				DELETE_RIGHT BOOLEAN,
				
				CONSTRAINT CALENDAR_USER_RIGHTS_PK PRIMARY KEY ( ID )
			);
			
			CREATE TABLE CALENDAR_EVENT_OE (
				CALENDAR_EVENT_ID BIGINT NOT NULL,
				ATTENDEES_ORG_ENTITY_ID BIGINT NOT NULL 
			);
			
			CREATE TABLE PROJECT (
				ID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				TYPE TEXT NOT NULL,
				DESCRIPTION TEXT,
				PROJECT_ABBREVIATION TEXT,
				USER_RESPONSIBLE_ID BIGINT NOT NULL,
				JR_DOCUMENT_LOCATION_REAL_NAME TEXT,
				JR_DOCUMENT_ID TEXT,
				START_DATE TIMESTAMP,
				END_DATE TIMESTAMP,
				IMPLEMENTATION_DATE TIMESTAMP,
				IMPORTANCE NUMERIC,
				INITIATOR_ID BIGINT,
				STATUS TEXT, 
				
				CONSTRAINT PROJECT_PK PRIMARY KEY(ID)
			);
			
			CREATE TABLE PROJECT_PARTICIPANTS_OE (
				PROJECT_ID BIGINT NOT NULL,
				PARTICIPANT_ORG_ENTITY_ID BIGINT NOT NULL
			);
			
			CREATE TABLE TASK (
				ID BIGINT NOT NULL,
				NAME TEXT NOT NULL,
				DESCRIPTION TEXT,
				START_DATE TIMESTAMP,
				END_DATE TIMESTAMP,
				PRIORITY TEXT,
				COMMENTS TEXT,
				PROJECT_ID BIGINT NOT NULL,
				STATUS TEXT,
				INITIATOR_ID BIGINT,
				PERMANENT BOOLEAN,
				FINALIZED_DATE TIMESTAMP,
				PARTICIPATIONS_TO TEXT,
				EXPLICATIONS TEXT,
				
				CONSTRAINT TASK_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE TASK_ATTACHMENT (
				ID BIGINT NOT NULL,
				FILE_NAME TEXT NOT NULL,
				FILE_CONTENT BYTEA,
				TASK_ID BIGINT NOT NULL,
				
				CONSTRAINT TASK_ATTACHMENT_PK PRIMARY KEY(ID)
			);
			
			CREATE TABLE TASK_ASSIGNMENT_OE (
				TASK_ID BIGINT NOT NULL,
				ASSIGNEE_ORG_ENTITY_ID BIGINT NOT NULL 
			);
			
			CREATE TABLE PROJECT_ESTIMATION (
				ID BIGINT NOT NULL,
				ESTIMATION_IN_PERCENT NUMERIC NOT NULL,
				START_DATE TIMESTAMP NOT NULL,
				END_DATE TIMESTAMP,
				PROJECT_ID BIGINT NOT NULL,
				
				CONSTRAINT PROJECT_ESTIMAION_PK PRIMARY KEY (ID)
			);
			
			CREATE TABLE PROJECT_COMISII_SAU_GL(
			
				PROJECT_ID BIGINT NOT NULL,
				COMISIE_SAU_GL_ID BIGINT NOT NULL,
				
				CONSTRAINT PROJ_COM_SAU_GL_PROJECT_ID_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID),
				CONSTRAINT PROJ_COM_SAU_GL_COMISIE_ID_FK FOREIGN KEY (COMISIE_SAU_GL_ID) REFERENCES NOMENCLATOR_VALUES (ID)
			);
		</sql>
	</changeSet>
	
	<changeSet id="0001-creare-secvente" author="CloudSoft.User1">
		<sql endDelimiter=";">
			CREATE SEQUENCE LOGS_SEQUENCE START 1;
			CREATE SEQUENCE HIBERNATE_SEQUENCE START 1;
		</sql>
	</changeSet>
	
	<changeSet id="0001-adaugare-constrangeri" author="CloudSoft.User1">
		<sql endDelimiter=";">
			ALTER TABLE DOCTYPE_OE ADD CONSTRAINT DOCTYPE_OE_DOCTYPE_FK FOREIGN KEY (DOCUMENTTYPE_ID) REFERENCES DOCUMENTTYPE;
			ALTER TABLE DOCTYPE_OE ADD CONSTRAINT DOCTYPE_OE_INIT_FK FOREIGN KEY (INITIATORS_ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE DOCUMENTTYPE_MIMETYPE ADD CONSTRAINT DOCTYPE_MIMETYPE_MIME_TYPE_FK FOREIGN KEY (ALLOWEDMIMETYPES_ID) REFERENCES MIMETYPE;
			ALTER TABLE DOCUMENTTYPE_MIMETYPE ADD CONSTRAINT DOCTYPE_MIMETYPE_DOCTYPE_FK FOREIGN KEY (DOCUMENTTYPE_ID) REFERENCES DOCUMENTTYPE;
			ALTER TABLE EDOCGROUP ADD CONSTRAINT FK57B1CF8CD671184F FOREIGN KEY (ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE EDOCUSER ADD CONSTRAINT FK977FB8FEF07B1497 FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATION;
			ALTER TABLE EDOCUSER ADD CONSTRAINT FK977FB8FEE169A757 FOREIGN KEY (OU_ORG_ENTITY_ID) REFERENCES ORGANIZATIONUNIT;
			ALTER TABLE EDOCUSER ADD CONSTRAINT FK977FB8FED671184F FOREIGN KEY (ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE GROUP_USER ADD CONSTRAINT FK6B1EC1ABC5B17A97 FOREIGN KEY (USER_ID) REFERENCES EDOCUSER;
			ALTER TABLE GROUP_USER ADD CONSTRAINT FK6B1EC1AB1DC3E43D FOREIGN KEY (GROUP_ID) REFERENCES EDOCGROUP;			
			ALTER TABLE LISTMETADATAITEM ADD CONSTRAINT FKB4C986C040622F2F FOREIGN KEY (LIST_ID) REFERENCES METADATADEFINITION;
			ALTER TABLE METADATACOLLECTION ADD CONSTRAINT FKC597D34D13BF292D FOREIGN KEY (DOCUMENTTYPE_ID) REFERENCES DOCUMENTTYPE;
			ALTER TABLE METADATADEFINITION ADD CONSTRAINT FKF0EB5A0226EFFABC FOREIGN KEY (COLLECTION_ID) REFERENCES METADATACOLLECTION;
			ALTER TABLE METADATADEFINITION ADD CONSTRAINT FKF0EB5A0213BF292D FOREIGN KEY (DOCUMENTTYPE_ID) REFERENCES DOCUMENTTYPE;
			ALTER TABLE ORGANIZATION ADD CONSTRAINT FK50104153632F3375 FOREIGN KEY (MANAGER_ID) REFERENCES EDOCUSER;
			ALTER TABLE ORGANIZATIONUNIT ADD CONSTRAINT FK60C1AD77F07B1497 FOREIGN KEY (ORGANIZATION_ID) REFERENCES ORGANIZATION;
			ALTER TABLE ORGANIZATIONUNIT ADD CONSTRAINT FK60C1AD774D5A36D2 FOREIGN KEY (MANAGER_ORG_ENTITY_ID) REFERENCES EDOCUSER;
			ALTER TABLE ORGANIZATIONUNIT ADD CONSTRAINT FK60C1AD77D671184F FOREIGN KEY (ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE ORGANIZATIONUNIT ADD CONSTRAINT FK60C1AD77CFD21C01 FOREIGN KEY (PARENTOU_ORG_ENTITY_ID) REFERENCES ORGANIZATIONUNIT;
			ALTER TABLE WORKFLOWINSTANCE ADD CONSTRAINT FKC218E59469285EA7 FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW;
			ALTER TABLE WORKFLOWTRANSITION ADD CONSTRAINT FK2ED7A943268A4D0 FOREIGN KEY (STARTSTATE_ID) REFERENCES WORKFLOWSTATE;
			ALTER TABLE WORKFLOWTRANSITION ADD CONSTRAINT FK2ED7A9469285EA7 FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW;
			ALTER TABLE WORKFLOWTRANSITION ADD CONSTRAINT FK2ED7A9475B84DE4 FOREIGN KEY (FINALSTATE_ID) REFERENCES WORKFLOWSTATE;
			ALTER TABLE WORKFLOWVIEWER_OE ADD CONSTRAINT FK21D8FA04840C6321 FOREIGN KEY (EXTRAVIEWERS_ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE WORKFLOWVIEWER_OE ADD CONSTRAINT FK21D8FA0438D03A67 FOREIGN KEY (WORKFLOWTRANSITION_ID) REFERENCES WORKFLOWTRANSITION;
			ALTER TABLE WORKFLOW_OE ADD CONSTRAINT FKC982B23691EB151B FOREIGN KEY (SUPERVISORS_ORG_ENTITY_ID) REFERENCES ORGANIZATIONENTITY;
			ALTER TABLE WORKFLOW_OE ADD CONSTRAINT FKC982B23669285EA7 FOREIGN KEY (WORKFLOW_ID) REFERENCES WORKFLOW;
			ALTER TABLE metadatadefinition ADD CONSTRAINT o_usrs_frm_grp_4_usr_meta_chk CHECK (
			    (
			      (metadatatype = 'USER')
			      AND
			      (only_users_from_group IS NOT NULL)
			    )
			    OR
			    (metadatatype != 'USER')
			 );
			 ALTER TABLE metadatadefinition ADD CONSTRAINT id_grp_of_permitted_users_chk CHECK (
			    (
			      (metadatatype = 'USER')
			      AND
			      (
			        (
			          (only_users_from_group = TRUE)
			          AND
			          (id_of_group_of_permitted_users IS NOT NULL)
			        )
			        OR
			        (only_users_from_group = FALSE)
			      )
			    )
			    OR
			    (metadatatype != 'USER')
			);
			ALTER TABLE documenttype ADD CONSTRAINT mand_att_whn_meta_has_val_chk CHECK (
					((mandatoryAttachment = FALSE) AND (mand_attach_when_metad_has_val = FALSE))
					OR
					(mandatoryAttachment = TRUE)
			);
			ALTER TABLE documenttype ADD CONSTRAINT meta_nam_val_mand_att_cnd_chk CHECK (
					(
						(mand_attach_when_metad_has_val = TRUE)
						AND
						(
							(meta_name_in_mand_attach_cond IS NOT NULL)
							AND
							(meta_value_in_mand_attach_cond IS NOT NULL)
						)
					)
					OR
					(
						(mand_attach_when_metad_has_val = FALSE)
						AND
						(
							(meta_name_in_mand_attach_cond IS NULL)
							AND
							(meta_value_in_mand_attach_cond IS NULL)
						)
					)
			);		
			ALTER TABLE documenttype ADD CONSTRAINT mandatory_attachmnt_states_chk CHECK (
					((mandatory_attachment_in_states = FALSE) AND (mandatory_attachment_states IS NULL))
					OR
					((mandatory_attachment_in_states = TRUE) AND (mandatory_attachment_states IS NOT NULL))
			);
			ALTER TABLE documenttype ADD CONSTRAINT default_locatn_4_doc_type_chk CHECK (
					((par_doc_loc_real_nam_4_def_loc IS NULL) AND (folder_id_4_default_location IS NULL))
					OR
					((par_doc_loc_real_nam_4_def_loc IS NOT NULL) AND (folder_id_4_default_location IS NOT NULL))
			);
			ALTER TABLE metadatadefinition ADD CONSTRAINT auto_cp_usr_meta_w_crt_usr_chk CHECK (
					(
						(metadatatype != 'USER')
						AND
						(
							(auto_compl_with_current_user IS NULL)
							AND
							(auto_cpl_w_crt_usr_state_code IS NULL)
						)
					)
					OR
					(
						(metadatatype = 'USER')
						AND
						(
							(auto_compl_with_current_user IS NOT NULL)
							AND
							(
								(
									(auto_compl_with_current_user = FALSE)
									AND
									(auto_cpl_w_crt_usr_state_code IS NULL)
								)
								OR
								(
									(auto_compl_with_current_user = TRUE)
									AND
									(auto_cpl_w_crt_usr_state_code IS NOT NULL)
								)
							)
						)
					)
			);
			ALTER TABLE METADATADEFINITION ADD CONSTRAINT METADATA_DEF_NOMENCLATOR_ID_FK FOREIGN KEY (NOMENCLATOR_ID) REFERENCES NOMENCLATOR(ID);			
			ALTER TABLE METADATADEFINITION ADD CONSTRAINT MET_DEF_METADAT_DOC_TYPE_ID_FK FOREIGN KEY (METADATA_DOCUMENT_TYPE_ID) REFERENCES DOCUMENTTYPE(ID);
				
			ALTER TABLE NOMENCLATOR_ATTRIBUTE ADD CONSTRAINT NOMENCLATOR_ATTRIBUTE_ID_FK FOREIGN KEY ( NOMENCLATOR_ID ) REFERENCES NOMENCLATOR ( ID );
			
			ALTER TABLE NOMENCLATOR_VALUES ADD CONSTRAINT NOMENCLATOR_VALUES_NOMCL_ID_FK FOREIGN KEY ( NOMENCLATOR_ID ) REFERENCES NOMENCLATOR ( ID );
			
			ALTER TABLE NOMENCLATOR_UI_ATTRIBUTE ADD CONSTRAINT NOM_UI_ATTRIBUTE_ATTR_ID_FK FOREIGN KEY ( ATTRIBUTE_ID  ) REFERENCES NOMENCLATOR_ATTRIBUTE ( ID );
			ALTER TABLE NOMENCLATOR_UI_ATTRIBUTE ADD CONSTRAINT NOM_UI_ATTRIBUTE_NOMNCLT_ID_FK FOREIGN KEY ( NOMENCLATOR_ID ) REFERENCES NOMENCLATOR ( ID );			
			
			ALTER TABLE DOCUMENT_VALIDATION_DEFINITION ADD CONSTRAINT DOC_VALIDTN_DEF_DOC_TYPE_ID_FK FOREIGN KEY (DOCUMENT_TYPE_ID) REFERENCES DOCUMENTTYPE (ID);
			ALTER TABLE DOCUMENT_VALIDATION_DEFINITION ADD CONSTRAINT DOC_VALIDTN_DEF_MET_COLL_ID_FK FOREIGN KEY (METADATA_COLLECTION_ID) REFERENCES METADATACOLLECTION (ID);
			
			ALTER TABLE CALENDAR_EVENT ADD CONSTRAINT CALENDAR_EVENT_FK_CALENDAR_ID FOREIGN KEY ( CALENDAR_ID ) REFERENCES CALENDAR ( ID );
			ALTER TABLE CALENDAR_EVENT ADD CONSTRAINT calendar_event_reprezentant_extern_nom_value_id_fk FOREIGN KEY (reprezentant_extern_nom_value_id) REFERENCES nomenclator_values(id);
			
			ALTER TABLE CALENDAR_USER_RIGHTS ADD CONSTRAINT CALENDAR_OE_FK_CALENDAR_ID FOREIGN KEY ( CALENDAR_ID ) REFERENCES CALENDAR ( ID );
			ALTER TABLE CALENDAR_USER_RIGHTS ADD CONSTRAINT CALENDAR_OE_FK_ORG_ENTITY_ID FOREIGN KEY ( USER_RIGHT_ORG_ENTITY_ID ) REFERENCES ORGANIZATIONENTITY ( ORG_ENTITY_ID );	
			
			ALTER TABLE CALENDAR_EVENT_OE ADD CONSTRAINT CALENDAR_EVENT_OE_CAL_EV_ID_FK FOREIGN KEY ( CALENDAR_EVENT_ID ) REFERENCES CALENDAR_EVENT ( ID );
			ALTER TABLE CALENDAR_EVENT_OE ADD CONSTRAINT CALEAR_EVENT_OE_FK_ORG_ENTY_ID FOREIGN KEY ( ATTENDEES_ORG_ENTITY_ID ) REFERENCES ORGANIZATIONENTITY ( ORG_ENTITY_ID );
			
			ALTER TABLE PROJECT ADD CONSTRAINT PROJECT_NAME_UQ UNIQUE (NAME);
			ALTER TABLE PROJECT ADD CONSTRAINT PROJECT_USER_RESPONSIBLE_ID_FK FOREIGN KEY ( USER_RESPONSIBLE_ID ) REFERENCES EDOCUSER ( ORG_ENTITY_ID );
			ALTER TABLE PROJECT_PARTICIPANTS_OE ADD CONSTRAINT PROJECT_PART_OE_PROJECT_ID_FK FOREIGN KEY ( PROJECT_ID ) REFERENCES PROJECT ( ID );
			ALTER TABLE PROJECT_PARTICIPANTS_OE ADD CONSTRAINT PROJECT_PART_OE_ORG_ENTITY_ID FOREIGN KEY ( PARTICIPANT_ORG_ENTITY_ID ) REFERENCES ORGANIZATIONENTITY ( ORG_ENTITY_ID );
			
			ALTER TABLE TASK ADD CONSTRAINT TASK_PROJECT_ID_FK FOREIGN KEY ( PROJECT_ID ) REFERENCES PROJECT ( ID );
			ALTER TABLE TASK ADD CONSTRAINT TASK_INITIATOR_ID_FK FOREIGN KEY ( INITIATOR_ID ) REFERENCES EDOCUSER ( ORG_ENTITY_ID );
			
			ALTER TABLE TASK_ATTACHMENT ADD CONSTRAINT TASK_ATTACHMENT_TASK_ID_FK FOREIGN KEY ( TASK_ID ) REFERENCES TASK ( ID );
			
			ALTER TABLE TASK_ASSIGNMENT_OE ADD CONSTRAINT TASK_ASSIGN_OE_ORG_ENTTY_ID_FK FOREIGN KEY ( ASSIGNEE_ORG_ENTITY_ID ) REFERENCES ORGANIZATIONENTITY ( ORG_ENTITY_ID );
			ALTER TABLE TASK_ASSIGNMENT_OE ADD CONSTRAINT TASK_ASSIGN_OE_TASK_ID_FK FOREIGN KEY ( TASK_ID ) REFERENCES TASK ( ID );
			
			ALTER TABLE PROJECT_ESTIMATION ADD CONSTRAINT PROJECT_ESTIMATN_PROJECT_ID_FK FOREIGN KEY (PROJECT_ID) REFERENCES PROJECT (ID);
		</sql>
	</changeSet>
	
</databaseChangeLog>